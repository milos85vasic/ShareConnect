name: Snyk Security Scanning

on:
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of security scan to run'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - deps-only
        - container-only
        - gradle-only
        - quick
      severity_threshold:
        description: 'Minimum severity level to report'
        required: false
        default: 'medium'
        type: choice
        options:
        - low
        - medium
        - high
        - critical
      fail_on_vulnerabilities:
        description: 'Fail workflow if vulnerabilities are found'
        required: false
        default: true
        type: boolean

jobs:
  snyk-security-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make scripts executable
      run: |
        chmod +x gradlew
        chmod +x run_snyk_scan.sh
        chmod +x snyk_scan_on_demand.sh

    - name: Build project for analysis
      run: |
        echo "Building project for security analysis..."
        ./gradlew clean build -x test --parallel

    - name: Run Snyk security scan
      id: snyk-scan
      run: |
        echo "🔒 Running Snyk security scan..."
        echo "Scan Type: ${{ github.event.inputs.scan_type }}"
        echo "Severity Threshold: ${{ github.event.inputs.severity_threshold }}"
        echo "Fail on Issues: ${{ github.event.inputs.fail_on_vulnerabilities }}"
        echo ""

        if [ "${{ github.event.inputs.scan_type }}" = "quick" ]; then
          # Run quick scan
          if [ "${{ github.event.inputs.fail_on_vulnerabilities }}" = "true" ]; then
            ./snyk_scan_on_demand.sh --severity ${{ github.event.inputs.severity_threshold }} --fail-on-issues
          else
            ./snyk_scan_on_demand.sh --severity ${{ github.event.inputs.severity_threshold }}
          fi
        else
          # Run comprehensive scan
          case "${{ github.event.inputs.scan_type }}" in
            "full")
              SCAN_ARGS="--scan"
              ;;
            "deps-only")
              SCAN_ARGS="--deps-only"
              ;;
            "container-only")
              SCAN_ARGS="--container-only"
              ;;
            "gradle-only")
              SCAN_ARGS="--gradle-only"
              ;;
          esac

          if [ "${{ github.event.inputs.fail_on_vulnerabilities }}" = "true" ]; then
            SCAN_ARGS="$SCAN_ARGS --severity ${{ github.event.inputs.severity_threshold }}"
          fi

          ./run_snyk_scan.sh $SCAN_ARGS
        fi
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        SNYK_ORG_ID: ${{ secrets.SNYK_ORG_ID }}
      continue-on-error: ${{ github.event.inputs.fail_on_vulnerabilities == false }}

    - name: Upload security scan reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: snyk-security-reports-${{ github.run_number }}
        path: |
          Documentation/Tests/*_SNYK_*/**/*
          Documentation/Tests/*_SNYK_*/*
        retention-days: 30

    - name: Generate security scan summary
      if: always()
      run: |
        echo "## 🔒 Snyk Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Parameter | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Scan Type | ${{ github.event.inputs.scan_type }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Severity Threshold | ${{ github.event.inputs.severity_threshold }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Fail on Issues | ${{ github.event.inputs.fail_on_vulnerabilities }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        # Check if reports were generated
        if find Documentation/Tests -name "*_SNYK_*" -type d | grep -q .; then
          LATEST_REPORT=$(find Documentation/Tests -name "*_SNYK_*" -type d | sort | tail -1)
          echo "📊 **Reports Generated:**" >> $GITHUB_STEP_SUMMARY
          echo "- 📁 Report Directory: \`$LATEST_REPORT\`" >> $GITHUB_STEP_SUMMARY

          if [ -f "$LATEST_REPORT/snyk_summary.txt" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📋 Scan Summary" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat "$LATEST_REPORT/snyk_summary.txt" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -f "$LATEST_REPORT/snyk_report.html" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📈 [View Detailed HTML Report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "❌ **No reports generated** - Check workflow logs for errors" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Security scan status
      if: always()
      run: |
        if [ "${{ steps.snyk-scan.outcome }}" = "success" ]; then
          echo "✅ **Security scan completed successfully**" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ steps.snyk-scan.outcome }}" = "failure" ]; then
          echo "❌ **Security vulnerabilities detected**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please review the security reports and address any critical or high-severity issues." >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Security scan completed with warnings**" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Notify security team on critical findings
      if: failure() && github.event.inputs.fail_on_vulnerabilities == true
      run: |
        echo "🚨 **CRITICAL SECURITY ALERT** 🚨" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Security vulnerabilities have been detected that require immediate attention!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Recommended Actions:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Review the detailed security report" >> $GITHUB_STEP_SUMMARY
        echo "2. Assess the impact of each vulnerability" >> $GITHUB_STEP_SUMMARY
        echo "3. Apply security patches or mitigations" >> $GITHUB_STEP_SUMMARY
        echo "4. Re-run security scan to verify fixes" >> $GITHUB_STEP_SUMMARY
        echo "5. Update dependencies if newer secure versions are available" >> $GITHUB_STEP_SUMMARY

    - name: Set up Slack notification (optional)
      if: always() && env.SLACK_WEBHOOK_URL
      run: |
        # This would send notifications to Slack if webhook is configured
        # Implementation depends on your Slack setup
        echo "Slack notification could be sent here if configured"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}