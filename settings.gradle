pluginManagement {

    plugins {
        id 'com.android.application' version '8.9.1'
        id 'org.jetbrains.kotlin.android' version '2.0.0'
        id 'org.jetbrains.kotlin.jvm' version '2.0.0'
        id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
        id 'org.jetbrains.kotlin.plugin.compose' version '2.0.0'
        id 'com.google.devtools.ksp' version '2.1.0-1.0.29'
        id 'com.google.gms.google-services' version '4.4.3'
        id 'com.google.firebase.crashlytics' version '3.0.6'
        id 'com.google.firebase.appdistribution' version '5.1.1'
    }

    repositories {

        gradlePluginPortal()
        maven { url 'https://repo.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jetbrains' }
        maven { url 'https://mirrors.ustc.edu.cn/jetbrains/' }
        maven { url 'https://mirrors.tuna.tsinghua.edu.cn/jetbrains/' }
        maven { url "https://jitpack.io" }
        mavenCentral()
        google()
        maven { url 'https://maven.pkg.jetbrains.space/public/p/compose/dev' }
    }
}

dependencyResolutionManagement {

    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)

    repositories {

        mavenLocal()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jetbrains' }
        maven { url 'https://mirrors.ustc.edu.cn/jetbrains/' }
        maven { url 'https://mirrors.tuna.tsinghua.edu.cn/jetbrains/' }
        maven { url 'https://repo.huaweicloud.com/repository/maven/' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        mavenCentral()
        google()
        maven { url 'https://maven.pkg.jetbrains.space/public/p/compose/dev' }
        flatDir {
            dirs 'Toolkit/JCommons/jar'
        }
    }
}

rootProject.name = "ShareConnect"

include ':Toolkit:Main'
include ':Toolkit:Test'
include ':Toolkit:JCommons'
include ':Toolkit:Analytics'
include ':Toolkit:Access'
include ':Toolkit:CircleImageView'
include ':Toolkit:ConnectionIndicator'
include ':Toolkit:FastscrollerAlphabet'
include ':Toolkit:Interprocess'
include ':Toolkit:Media'
include ':Toolkit:RootShell'
include ':Toolkit:RootTools'
include ':Toolkit:Applications:DataManagerDemo'
include ':Toolkit:Applications:Echo'
include ':Toolkit:Toolkit'
include ':Toolkit:Toolkit:Main'
include ':Toolkit:Toolkit:Test'
include ':Toolkit:Toolkit:JCommons'
include ':Toolkit:Toolkit:Analytics'
include ':Toolkit:Toolkit:Access'
include ':Toolkit:Toolkit:CircleImageView'
include ':Toolkit:Toolkit:ConnectionIndicator'
include ':Toolkit:Toolkit:FastscrollerAlphabet'
include ':Toolkit:Toolkit:Interprocess'
include ':Toolkit:Toolkit:Media'
include ':Toolkit:Toolkit:RootShell'
include ':Toolkit:Toolkit:RootTools'

  include ':shared'
  project(':shared').projectDir = new File(settingsDir, 'Connectors/qBitConnect/shared')
  include ':preferences'
  project(':preferences').projectDir = new File(settingsDir, 'Connectors/qBitConnect/preferences')
  include ':composeApp'
  project(':composeApp').projectDir = new File(settingsDir, 'Connectors/qBitConnect/composeApp')

 include ':mockserver'
 project(':mockserver').projectDir = new File(settingsDir, 'Connectors/TransmissionConnect/mockserver')
 include ':app'
 project(':app').projectDir = new File(settingsDir, 'Connectors/TransmissionConnect/app')

include ':Asinka:asinka'
include ':Asinka:demo-app'

include ':Application'
